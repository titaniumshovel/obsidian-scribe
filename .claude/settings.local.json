{
  "permissions": {
    "allow": [
      "Bash(pip install python-dotenv)",
      "Bash(python -m venv venv)",
      "Bash(source venv/bin/activate)",
      "Bash(pip install python-dotenv pyyaml requests)",
      "Bash(python -m src.main --help)",
      "Bash(pip install watchdog)",
      "Bash(mkdir -p examples/sample-data)",
      "Bash(mv audio_input/ archive/ Transcripts/ examples/sample-data/)",
      "Bash(rm -rf cache/ temp/ state/)",
      "Bash(mv:*)",
      "Bash(tree -I 'venv|__pycache__|*.pyc|.git' -L 2)",
      "Bash(find:*)",
      "Bash(rm -rf archive/)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(echo -e \"\\n=== LEGACY TOOLS ===\")",
      "Bash(echo -e \"\\n=== EXAMPLES ===\")",
      "Bash(env)",
      "Bash(grep:*)",
      "Bash(true:*)",
      "Bash(export ANTHROPIC_API_KEY=\"dummy\")",
      "Bash(unset ANTHROPIC_API_KEY)",
      "Bash(export)",
      "Bash(unset ANTHROPIC_AUTH_TOKEN)",
      "Bash(python -c \"import src.watcher.file_watcher; print(''File watcher can be imported'')\")",
      "Bash(python -c \"import src.watcher.file_watcher; print(''File watcher imported successfully'')\")",
      "Bash(timeout 5 python -m src.main --log-level DEBUG)",
      "Bash(mkdir -p docs/technical docs/project)",
      "Bash(rm docs/ARCHITECTURE_OVERVIEW.md)",
      "Bash(ffmpeg -version)",
      "Bash(ffmpeg -i \"/mnt/c/Users/christopherm/OneDrive - TrendMicro/Documents/Internal Documents/Obsidian/Trend Micro/Trend Micro/Audio/2025-07-14T18-56-35-114Z.webm\" -t 00:45:00 -c copy \"/mnt/c/Users/christopherm/OneDrive - TrendMicro/Documents/Internal Documents/Obsidian/Trend Micro/Trend Micro/Audio/2025-07-14T18-56-35-114Z_trimmed.webm\")",
      "Bash(pip install -e .)",
      "Bash(ls:*)",
      "Bash(obsidian-scribe --help)",
      "Bash(timeout 10 python -m src.main --log-level DEBUG)",
      "Bash(ffmpeg -i audio_input/2025-07-14T18-56-35-114Z_trimmed.webm -f wav -)",
      "Bash(python debug_ffmpeg.py)",
      "Bash(python -c \"\nimport os\nfrom pathlib import Path\ntemp_path = Path(''./temp'')\nprint(f''Temp folder exists: {temp_path.exists()}'')\nprint(f''Temp folder is writable: {os.access(temp_path, os.W_OK) if temp_path.exists() else \"\"N/A\"\"}'')\nif temp_path.exists():\n    print(f''Temp folder permissions: {oct(temp_path.stat().st_mode)[-3:]}'')\n\")",
      "Bash(python debug_converter.py)",
      "Bash(python -c \"\nimport signal\nimport time\nimport subprocess\nimport sys\n\n# Start the program in background\nproc = subprocess.Popen([\n    ''python'', ''-m'', ''src.main'', ''--log-level'', ''INFO''\n], stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True)\n\n# Let it run for 30 seconds\ntime.sleep(30)\n\n# Send interrupt signal\nproc.send_signal(signal.SIGINT)\n\n# Get output\nstdout, stderr = proc.communicate(timeout=10)\n\nprint(''STDOUT:'')\nprint(stdout)\nprint(''STDERR:'')\nprint(stderr)\nprint(f''Return code: {proc.returncode}'')\n\")"
    ],
    "deny": []
  }
}